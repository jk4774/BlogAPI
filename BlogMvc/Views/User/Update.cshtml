@model BlogData.ViewModels.PasswordViewModel
@{
    ViewData["Title"] = "User Update";
}
<div class="row">
    <div class="col-md-12">
        @Html.PasswordFor(m => m.Old, new { placeholder = "Old Password", @class = "mt-2 form-control" })
        @Html.ValidationMessageFor(m => m.Old, "", new { @class = "text-danger" })
        @Html.PasswordFor(m => m.New, new { placeholder = "New Password", @class = "mt-2 form-control" })    
        @Html.ValidationMessageFor(m => m.New, "", new { @class = "text-danger" })
        <div class="text-center h2"> 
            <input class="mt-2 btn btn-outline-lg bg-black text-white" name="update" type="submit" value="Change Password" />
        </div>
        <div class="text-center align-middle mb-2">
            @Html.ValidationMessage("error", new { @class = "text-danger" })
        </div>
    </div>
</div>
<script>
    $('input[name$="update"]').click(() => {
        fetch('/user/update/' + @User.Identity.Name, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ Old: $('#Old').val(), New: $('#New').val() })
        }).then((response) => {
            if (response.status == '204') 
                return window.location.href = '/user/' + @User.Identity.Name;
            response.text().then(html => {
                document.body.innerHTML = html;
                document.querySelectorAll('script').forEach(x => eval(x.text));
            });
        }).catch((err) => {
            throw err;
        });
    });
</script>